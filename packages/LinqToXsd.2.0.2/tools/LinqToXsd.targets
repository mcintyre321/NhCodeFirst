<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <LinqToXsdBinDir Condition="'$(LinqToXsdBinDir)' == ''">.</LinqToXsdBinDir>
  </PropertyGroup>


  <UsingTask TaskName="LinqToXsdTask" AssemblyFile="$(LinqToXsdBinDir)\XOTask.dll"/>


  <!-- This ItemGroup is needed to make sure that the necessary dlls are referenced -->
  <ItemGroup>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Xml.Schema.Linq.dll">
        <HintPath>$(LinqToXsdBinDir)\Xml.Schema.Linq.dll</HintPath>
    </Reference>
  </ItemGroup>

  <!-- This ItemGroup is needed to make sure that LinqToXsdSchema and LinqToXsdConfiguration are available in VisualStudio-->  
  <ItemGroup>
    <AvailableItemName Include="LinqToXsdSchema" />   
    <AvailableItemName Include="LinqToXsdConfiguration" />
  </ItemGroup>

  <!-- This Target does the work of converting XSD files into the output C# file. -->
  <!-- Inputs and Outputs ensure that dependency checking happens-->
  <Target Name="XSDToCSharp"  Inputs="@(LinqToXsdSchema);@(LinqToXsdConfiguration)" Outputs="$(IntermediateOutputPath)LinqToXsdSource.cs" DependsOnTargets="CreateLinqToXsdConfigurationProperties">
    <LinqToXsdTask Condition="'@(LinqToXsdSchema)'!=''" 
                    Sources="@(LinqToXsdSchema)" 
                    LinqToXsdDir="$(LinqToXsdBinDir)" 
                    ConfigurationFile="$(LinqToXsdConfigurationProperty)" 
                    Filename="$(IntermediateOutputPath)LinqToXsdSource.cs" >
      
      <!-- This Output element takes the filename of the generated file from the XOTask.Filename property and adds it to the list of files to compile-->
      <Output TaskParameter="Filename" ItemName="Compile" />
    </LinqToXsdTask>


    <!-- Need to record the temporary files we write out so that they can be cleaned 
        These are recorded as Items of Type FileWrites.
        The rules for dealing with these types of temporary files is in Microsoft.Common.targets
    -->
    <CreateItem Include="$(IntermediateOutputPath)LinqToXsdSource.cs" >
      <Output TaskParameter="Include" ItemName="FileWrites"/>
    </CreateItem>
    
  </Target>

  <!--  This Target element overrides the BeforeCompile Target defined in Microsoft.Common.targets
        ensuring that TXLinq gets invoked before the C# compiler.
  -->
  <Target Name="BeforeCompile" DependsOnTargets="XSDToCSharp" />
  
  <Target Name="CreateLinqToXsdConfigurationProperties">

    <CreateProperty
        Value="@(LinqToXsdConfiguration)">
      <Output
          TaskParameter="Value"
          PropertyName="LinqToXsdConfigurationProperty" />
    </CreateProperty>

  </Target>
</Project>
  
 
